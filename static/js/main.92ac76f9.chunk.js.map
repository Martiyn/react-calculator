{"version":3,"sources":["Calculator.js","buttons.js","formula.js","output.js","reportWebVitals.js","index.js"],"names":["isOperator","endsWithOperator","endsWithNegativeSign","Calculator","props","state","currentVal","prevVal","formula","currentSign","lastClicked","maxDigitWarning","bind","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","this","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","value","target","length","match","className","currentValue","decimal","evaluate","numbers","operators","React","Component","clearStyle","background","operatorStyle","equalsStyle","position","height","bottom","Buttons","id","onClick","style","Formula","Output","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92ac76f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport Buttons from './buttons.js';\r\nimport Formula from './formula.js';\r\nimport Output from './output.js';\r\nimport './index.scss';\r\n\r\nconst isOperator = /[x/+‑]/,\r\n  endsWithOperator = /[x+‑/]$/,\r\n  endsWithNegativeSign = /\\d[x/+‑]{1}‑$/\r\n  \r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        currentVal: '0',\r\n        prevVal: '0',\r\n        formula: '',\r\n        currentSign: 'pos',\r\n        lastClicked: ''\r\n      };\r\n      this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n      this.handleOperators = this.handleOperators.bind(this);\r\n      this.handleEvaluate = this.handleEvaluate.bind(this);\r\n      this.initialize = this.initialize.bind(this);\r\n      this.handleDecimal = this.handleDecimal.bind(this);\r\n      this.handleNumbers = this.handleNumbers.bind(this);\r\n    }\r\n  \r\n    maxDigitWarning() {\r\n      this.setState({\r\n        currentVal: 'Digit Limit Met',\r\n        prevVal: this.state.currentVal\r\n      });\r\n      setTimeout(() => this.setState({ currentVal: this.state.prevVal }), 1000);\r\n    }\r\n  \r\n    handleEvaluate() {\r\n      if (!this.state.currentVal.includes('Limit')) {\r\n        let expression = this.state.formula;\r\n        while (endsWithOperator.test(expression)) {\r\n          expression = expression.slice(0, -1);\r\n        }\r\n        expression = expression\r\n          .replace(/x/g, '*')\r\n          .replace(/‑/g, '-')\r\n          .replace('--', '+0+0+0+0+0+0+');\r\n        let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\r\n        this.setState({\r\n          currentVal: answer.toString(),\r\n          formula:\r\n            expression\r\n              .replace(/\\*/g, '⋅')\r\n              .replace(/-/g, '‑')\r\n              .replace('+0+0+0+0+0+0+', '‑-')\r\n              .replace(/(x|\\/|\\+)‑/, '$1-')\r\n              .replace(/^‑/, '-') +\r\n            '=' +\r\n            answer,\r\n          prevVal: answer,\r\n          evaluated: true\r\n        });\r\n      }\r\n    }\r\n  \r\n    handleOperators(e) {\r\n      if (!this.state.currentVal.includes('Limit')) {\r\n        const value = e.target.value;\r\n        const { formula, prevVal, evaluated } = this.state;\r\n        this.setState({ currentVal: value, evaluated: false });\r\n        if (evaluated) {\r\n          this.setState({ formula: prevVal + value });\r\n        } else if (!endsWithOperator.test(formula)) {\r\n          this.setState({\r\n            prevVal: formula,\r\n            formula: formula + value\r\n          });\r\n        } else if (!endsWithNegativeSign.test(formula)) {\r\n          this.setState({\r\n            formula:\r\n              (endsWithNegativeSign.test(formula + value) ? formula : prevVal) +\r\n              value\r\n          });\r\n        } else if (value !== '‑') {\r\n          this.setState({\r\n            formula: prevVal + value\r\n          });\r\n        }\r\n      }\r\n    }\r\n  \r\n    handleNumbers(e) {\r\n      if (!this.state.currentVal.includes('Limit')) {\r\n        const { currentVal, formula, evaluated } = this.state;\r\n        const value = e.target.value;\r\n        this.setState({ evaluated: false });\r\n        if (currentVal.length > 21) {\r\n          this.maxDigitWarning();\r\n        } else if (evaluated) {\r\n          this.setState({\r\n            currentVal: value,\r\n            formula: value !== '0' ? value : ''\r\n          });\r\n        } else {\r\n          this.setState({\r\n            currentVal:\r\n              currentVal === '0' || isOperator.test(currentVal)\r\n                ? value\r\n                : currentVal + value,\r\n            formula:\r\n              currentVal === '0' && value === '0'\r\n                ? formula === ''\r\n                  ? value\r\n                  : formula\r\n                : /([^.0-9]0|^0)$/.test(formula)\r\n                ? formula.slice(0, -1) + value\r\n                : formula + value\r\n          });\r\n        }\r\n      }\r\n    }\r\n  \r\n    handleDecimal() {\r\n      if (this.state.evaluated === true) {\r\n        this.setState({\r\n          currentVal: '0.',\r\n          formula: '0.',\r\n          evaluated: false\r\n        });\r\n      } else if (\r\n        !this.state.currentVal.includes('.') &&\r\n        !this.state.currentVal.includes('Limit')\r\n      ) {\r\n        this.setState({ evaluated: false });\r\n        if (this.state.currentVal.length > 21) {\r\n          this.maxDigitWarning();\r\n        } else if (\r\n          endsWithOperator.test(this.state.formula) ||\r\n          (this.state.currentVal === '0' && this.state.formula === '')\r\n        ) {\r\n          this.setState({\r\n            currentVal: '0.',\r\n            formula: this.state.formula + '0.'\r\n          });\r\n        } else {\r\n          this.setState({\r\n            currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.',\r\n            formula: this.state.formula + '.'\r\n          });\r\n        }\r\n      }\r\n    }\r\n  \r\n    initialize() {\r\n      this.setState({\r\n        currentVal: '0',\r\n        prevVal: '0',\r\n        formula: '',\r\n        currentSign: 'pos',\r\n        lastClicked: '',\r\n        evaluated: false\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"calculator\">\r\n            <Formula formula={this.state.formula.replace(/x/g, '⋅')} />\r\n            <Output currentValue={this.state.currentVal} />\r\n            <Buttons\r\n              decimal={this.handleDecimal}\r\n              evaluate={this.handleEvaluate}\r\n              initialize={this.initialize}\r\n              numbers={this.handleNumbers}\r\n              operators={this.handleOperators}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport './index.scss'\r\n\r\nconst clearStyle = { background: '#ac3939' },\r\noperatorStyle = { background: '#4d4d4d' },\r\nequalsStyle = {\r\n  background: '#004466',\r\n  position: 'absolute',\r\n  height: 130,\r\n  bottom: 3\r\n};\r\n\r\nclass Buttons extends React.Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"jumbo\"\r\n            id=\"clear\"\r\n            onClick={this.props.initialize}\r\n            style={clearStyle}\r\n            value=\"AC\"\r\n          >\r\n            AC\r\n          </button>\r\n          <button\r\n            id=\"divide\"\r\n            onClick={this.props.operators}\r\n            style={operatorStyle}\r\n            value=\"/\"\r\n          >\r\n            /\r\n          </button>\r\n          <button\r\n            id=\"multiply\"\r\n            onClick={this.props.operators}\r\n            style={operatorStyle}\r\n            value=\"x\"\r\n          >\r\n            x\r\n          </button>\r\n          <button id=\"seven\" onClick={this.props.numbers} value=\"7\">\r\n            7\r\n          </button>\r\n          <button id=\"eight\" onClick={this.props.numbers} value=\"8\">\r\n            8\r\n          </button>\r\n          <button id=\"nine\" onClick={this.props.numbers} value=\"9\">\r\n            9\r\n          </button>\r\n          <button\r\n            id=\"subtract\"\r\n            onClick={this.props.operators}\r\n            style={operatorStyle}\r\n            value=\"‑\"\r\n          >\r\n            ‑\r\n          </button>\r\n          <button id=\"four\" onClick={this.props.numbers} value=\"4\">\r\n            4\r\n          </button>\r\n          <button id=\"five\" onClick={this.props.numbers} value=\"5\">\r\n            5\r\n          </button>\r\n          <button id=\"six\" onClick={this.props.numbers} value=\"6\">\r\n            6\r\n          </button>\r\n          <button\r\n            id=\"add\"\r\n            onClick={this.props.operators}\r\n            style={operatorStyle}\r\n            value=\"+\"\r\n          >\r\n            +\r\n          </button>\r\n          <button id=\"one\" onClick={this.props.numbers} value=\"1\">\r\n            1\r\n          </button>\r\n          <button id=\"two\" onClick={this.props.numbers} value=\"2\">\r\n            2\r\n          </button>\r\n          <button id=\"three\" onClick={this.props.numbers} value=\"3\">\r\n            3\r\n          </button>\r\n          <button\r\n            className=\"jumbo\"\r\n            id=\"zero\"\r\n            onClick={this.props.numbers}\r\n            value=\"0\"\r\n          >\r\n            0\r\n          </button>\r\n          <button id=\"decimal\" onClick={this.props.decimal} value=\".\">\r\n            .\r\n          </button>\r\n          <button\r\n            id=\"equals\"\r\n            onClick={this.props.evaluate}\r\n            style={equalsStyle}\r\n            value=\"=\"\r\n          >\r\n            =\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Buttons;","import React from 'react';\r\nimport './index.scss'\r\n\r\nclass Formula extends React.Component {\r\n    render() {\r\n      return <div className=\"formulaScreen\">{this.props.formula}</div>;\r\n    }\r\n  }\r\n\r\nexport default Formula;","import React from 'react';\r\nimport './index.scss'\r\n\r\nclass Output extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"outputScreen\" id=\"display\">\r\n          {this.props.currentValue}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Output;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Calculator from './Calculator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}